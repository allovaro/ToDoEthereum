{
  "contractName": "TodoFactory",
  "abi": [
    {
      "inputs": [],
      "name": "createTodo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTodoByOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"createTodo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTodoByOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TodoFactory.sol\":\"TodoFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/TodoFactory.sol\":{\"keccak256\":\"0x8ac6d38ead23741ac2275f3291975275f83b02445f13ae22e1106b5c21eb8f0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d43da44f462a2c5dca48239a50f782984c91a252c15d85c744cc48fe1755db24\",\"dweb:/ipfs/Qmf3zJPxVd3QMpSD4Ta7WTgERruXE2CQkSKau85EF2MhNX\"]},\"project:/contracts/TodoList.sol\":{\"keccak256\":\"0x82adc595faea053ac5972856264c757769bc868b2cd86aba611dad84046341c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e40085b0aeb2ee41ab077225666d0f96af9a102eec55b855c8d1f74e306376c\",\"dweb:/ipfs/QmW8jbYtWZwgBdMmsWbbqPFECKf5m2cb1kEvScDJRS7r6k\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506111ff806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632da388821461003b57806375360c9614610059575b600080fd5b610043610063565b60405161005091906101c9565b60405180910390f35b6100616100c9565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b336040516100d69061017b565b6100e091906101c9565b604051809103906000f0801580156100fc573d6000803e3d6000fd5b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610fe5806101e583390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101b382610188565b9050919050565b6101c3816101a8565b82525050565b60006020820190506101de60008301846101ba565b9291505056fe608060405234801561001057600080fd5b5060405162000fe538038062000fe5833981810160405281019061003491906100dd565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061010a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100aa8261007f565b9050919050565b6100ba8161009f565b81146100c557600080fd5b50565b6000815190506100d7816100b1565b92915050565b6000602082840312156100f3576100f261007a565b5b6000610101848285016100c8565b91505092915050565b610ecb806200011a6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063111002aa146100675780631d65e77e14610083578063560f3192146100b55780638da5cb5b146100d15780638db4cd73146100ef578063d83e45c91461010d575b600080fd5b610081600480360381019061007c9190610a62565b610129565b005b61009d60048036038101906100989190610ae1565b610288565b6040516100ac93929190610bc0565b60405180910390f35b6100cf60048036038101906100ca9190610ae1565b61047d565b005b6100d9610612565b6040516100e69190610c3f565b60405180910390f35b6100f7610636565b6040516101049190610c5a565b60405180910390f35b61012760048036038101906101229190610ae1565b61064e565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ae90610ce7565b60405180910390fd5b60016040518060600160405280428152602001838152602001600015158152509080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001556020820151816001019080519060200190610226929190610798565b5060408201518160020160006101000a81548160ff02191690831515021790555050507f05d0fb833127fc08168556d0e7ca9554fc3f6bc843b3b7d2bf1c35aea6bab6604282600060405161027d93929190610bc0565b60405180910390a150565b6000606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461031d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031490610ce7565b60405180910390fd5b836001805490508110610365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035c90610d53565b60405180910390fd5b6001858154811061037957610378610d73565b5b9060005260206000209060030201600001546001868154811061039f5761039e610d73565b5b9060005260206000209060030201600101600187815481106103c4576103c3610d73565b5b906000526020600020906003020160020160009054906101000a900460ff168180546103ef90610dd1565b80601f016020809104026020016040519081016040528092919081815260200182805461041b90610dd1565b80156104685780601f1061043d57610100808354040283529160200191610468565b820191906000526020600020905b81548152906001019060200180831161044b57829003601f168201915b50505050509150935093509350509193909250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050290610ce7565b60405180910390fd5b600180808054905061051d9190610e32565b8154811061052e5761052d610d73565b5b9060005260206000209060030201600182815481106105505761054f610d73565b5b906000526020600020906003020160008201548160000155600182018160010190805461057c90610dd1565b61058792919061081e565b506002820160009054906101000a900460ff168160020160006101000a81548160ff02191690831515021790555090505060018054806105ca576105c9610e66565b5b60019003818190600052602060002090600302016000808201600090556001820160006105f791906108ab565b6002820160006101000a81549060ff02191690555050905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600180805490506106499190610e32565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d390610ce7565b60405180910390fd5b806001805490508110610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071b90610d53565b60405180910390fd5b6001828154811061073857610737610d73565b5b906000526020600020906003020160020160009054906101000a900460ff16156001838154811061076c5761076b610d73565b5b906000526020600020906003020160020160006101000a81548160ff0219169083151502179055505050565b8280546107a490610dd1565b90600052602060002090601f0160209004810192826107c6576000855561080d565b82601f106107df57805160ff191683800117855561080d565b8280016001018555821561080d579182015b8281111561080c5782518255916020019190600101906107f1565b5b50905061081a91906108eb565b5090565b82805461082a90610dd1565b90600052602060002090601f01602090048101928261084c576000855561089a565b82601f1061085d578054855561089a565b8280016001018555821561089a57600052602060002091601f016020900482015b8281111561089957825482559160010191906001019061087e565b5b5090506108a791906108eb565b5090565b5080546108b790610dd1565b6000825580601f106108c957506108e8565b601f0160209004906000526020600020908101906108e791906108eb565b5b50565b5b808211156109045760008160009055506001016108ec565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61096f82610926565b810181811067ffffffffffffffff8211171561098e5761098d610937565b5b80604052505050565b60006109a1610908565b90506109ad8282610966565b919050565b600067ffffffffffffffff8211156109cd576109cc610937565b5b6109d682610926565b9050602081019050919050565b82818337600083830152505050565b6000610a05610a00846109b2565b610997565b905082815260208101848484011115610a2157610a20610921565b5b610a2c8482856109e3565b509392505050565b600082601f830112610a4957610a4861091c565b5b8135610a598482602086016109f2565b91505092915050565b600060208284031215610a7857610a77610912565b5b600082013567ffffffffffffffff811115610a9657610a95610917565b5b610aa284828501610a34565b91505092915050565b6000819050919050565b610abe81610aab565b8114610ac957600080fd5b50565b600081359050610adb81610ab5565b92915050565b600060208284031215610af757610af6610912565b5b6000610b0584828501610acc565b91505092915050565b610b1781610aab565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b57578082015181840152602081019050610b3c565b83811115610b66576000848401525b50505050565b6000610b7782610b1d565b610b818185610b28565b9350610b91818560208601610b39565b610b9a81610926565b840191505092915050565b60008115159050919050565b610bba81610ba5565b82525050565b6000606082019050610bd56000830186610b0e565b8181036020830152610be78185610b6c565b9050610bf66040830184610bb1565b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c2982610bfe565b9050919050565b610c3981610c1e565b82525050565b6000602082019050610c546000830184610c30565b92915050565b6000602082019050610c6f6000830184610b0e565b92915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000610cd1602183610b28565b9150610cdc82610c75565b604082019050919050565b60006020820190508181036000830152610d0081610cc4565b9050919050565b7f5461736b20646f65736e27742065786973740000000000000000000000000000600082015250565b6000610d3d601283610b28565b9150610d4882610d07565b602082019050919050565b60006020820190508181036000830152610d6c81610d30565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610de957607f821691505b60208210811415610dfd57610dfc610da2565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e3d82610aab565b9150610e4883610aab565b925082821015610e5b57610e5a610e03565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220b789900de625c22259a48ce23921b8101061ab8b32b71d88af9eadcdfc5a52b664736f6c63430008090033a2646970667358221220fd8bb1bd821e6d0df2538413a39988a8c3cb3025e66a24bcc2bd27796ef020a364736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80632da388821461003b57806375360c9614610059575b600080fd5b610043610063565b60405161005091906101c9565b60405180910390f35b6100616100c9565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b336040516100d69061017b565b6100e091906101c9565b604051809103906000f0801580156100fc573d6000803e3d6000fd5b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610fe5806101e583390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101b382610188565b9050919050565b6101c3816101a8565b82525050565b60006020820190506101de60008301846101ba565b9291505056fe608060405234801561001057600080fd5b5060405162000fe538038062000fe5833981810160405281019061003491906100dd565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061010a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100aa8261007f565b9050919050565b6100ba8161009f565b81146100c557600080fd5b50565b6000815190506100d7816100b1565b92915050565b6000602082840312156100f3576100f261007a565b5b6000610101848285016100c8565b91505092915050565b610ecb806200011a6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063111002aa146100675780631d65e77e14610083578063560f3192146100b55780638da5cb5b146100d15780638db4cd73146100ef578063d83e45c91461010d575b600080fd5b610081600480360381019061007c9190610a62565b610129565b005b61009d60048036038101906100989190610ae1565b610288565b6040516100ac93929190610bc0565b60405180910390f35b6100cf60048036038101906100ca9190610ae1565b61047d565b005b6100d9610612565b6040516100e69190610c3f565b60405180910390f35b6100f7610636565b6040516101049190610c5a565b60405180910390f35b61012760048036038101906101229190610ae1565b61064e565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ae90610ce7565b60405180910390fd5b60016040518060600160405280428152602001838152602001600015158152509080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001556020820151816001019080519060200190610226929190610798565b5060408201518160020160006101000a81548160ff02191690831515021790555050507f05d0fb833127fc08168556d0e7ca9554fc3f6bc843b3b7d2bf1c35aea6bab6604282600060405161027d93929190610bc0565b60405180910390a150565b6000606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461031d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031490610ce7565b60405180910390fd5b836001805490508110610365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035c90610d53565b60405180910390fd5b6001858154811061037957610378610d73565b5b9060005260206000209060030201600001546001868154811061039f5761039e610d73565b5b9060005260206000209060030201600101600187815481106103c4576103c3610d73565b5b906000526020600020906003020160020160009054906101000a900460ff168180546103ef90610dd1565b80601f016020809104026020016040519081016040528092919081815260200182805461041b90610dd1565b80156104685780601f1061043d57610100808354040283529160200191610468565b820191906000526020600020905b81548152906001019060200180831161044b57829003601f168201915b50505050509150935093509350509193909250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050290610ce7565b60405180910390fd5b600180808054905061051d9190610e32565b8154811061052e5761052d610d73565b5b9060005260206000209060030201600182815481106105505761054f610d73565b5b906000526020600020906003020160008201548160000155600182018160010190805461057c90610dd1565b61058792919061081e565b506002820160009054906101000a900460ff168160020160006101000a81548160ff02191690831515021790555090505060018054806105ca576105c9610e66565b5b60019003818190600052602060002090600302016000808201600090556001820160006105f791906108ab565b6002820160006101000a81549060ff02191690555050905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600180805490506106499190610e32565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d390610ce7565b60405180910390fd5b806001805490508110610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071b90610d53565b60405180910390fd5b6001828154811061073857610737610d73565b5b906000526020600020906003020160020160009054906101000a900460ff16156001838154811061076c5761076b610d73565b5b906000526020600020906003020160020160006101000a81548160ff0219169083151502179055505050565b8280546107a490610dd1565b90600052602060002090601f0160209004810192826107c6576000855561080d565b82601f106107df57805160ff191683800117855561080d565b8280016001018555821561080d579182015b8281111561080c5782518255916020019190600101906107f1565b5b50905061081a91906108eb565b5090565b82805461082a90610dd1565b90600052602060002090601f01602090048101928261084c576000855561089a565b82601f1061085d578054855561089a565b8280016001018555821561089a57600052602060002091601f016020900482015b8281111561089957825482559160010191906001019061087e565b5b5090506108a791906108eb565b5090565b5080546108b790610dd1565b6000825580601f106108c957506108e8565b601f0160209004906000526020600020908101906108e791906108eb565b5b50565b5b808211156109045760008160009055506001016108ec565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61096f82610926565b810181811067ffffffffffffffff8211171561098e5761098d610937565b5b80604052505050565b60006109a1610908565b90506109ad8282610966565b919050565b600067ffffffffffffffff8211156109cd576109cc610937565b5b6109d682610926565b9050602081019050919050565b82818337600083830152505050565b6000610a05610a00846109b2565b610997565b905082815260208101848484011115610a2157610a20610921565b5b610a2c8482856109e3565b509392505050565b600082601f830112610a4957610a4861091c565b5b8135610a598482602086016109f2565b91505092915050565b600060208284031215610a7857610a77610912565b5b600082013567ffffffffffffffff811115610a9657610a95610917565b5b610aa284828501610a34565b91505092915050565b6000819050919050565b610abe81610aab565b8114610ac957600080fd5b50565b600081359050610adb81610ab5565b92915050565b600060208284031215610af757610af6610912565b5b6000610b0584828501610acc565b91505092915050565b610b1781610aab565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b57578082015181840152602081019050610b3c565b83811115610b66576000848401525b50505050565b6000610b7782610b1d565b610b818185610b28565b9350610b91818560208601610b39565b610b9a81610926565b840191505092915050565b60008115159050919050565b610bba81610ba5565b82525050565b6000606082019050610bd56000830186610b0e565b8181036020830152610be78185610b6c565b9050610bf66040830184610bb1565b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c2982610bfe565b9050919050565b610c3981610c1e565b82525050565b6000602082019050610c546000830184610c30565b92915050565b6000602082019050610c6f6000830184610b0e565b92915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000610cd1602183610b28565b9150610cdc82610c75565b604082019050919050565b60006020820190508181036000830152610d0081610cc4565b9050919050565b7f5461736b20646f65736e27742065786973740000000000000000000000000000600082015250565b6000610d3d601283610b28565b9150610d4882610d07565b602082019050919050565b60006020820190508181036000830152610d6c81610d30565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610de957607f821691505b60208210811415610dfd57610dfc610da2565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e3d82610aab565b9150610e4883610aab565b925082821015610e5b57610e5a610e03565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220b789900de625c22259a48ce23921b8101061ab8b32b71d88af9eadcdfc5a52b664736f6c63430008090033a2646970667358221220fd8bb1bd821e6d0df2538413a39988a8c3cb3025e66a24bcc2bd27796ef020a364736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:590:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:2",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:2",
                "type": ""
              }
            ],
            "src": "7:126:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "184:51:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "194:35:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "223:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "205:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "205:24:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "194:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "166:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "176:7:2",
                "type": ""
              }
            ],
            "src": "139:96:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "323:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "346:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "328:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "316:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "316:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "316:37:2"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "294:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "301:3:2",
                "type": ""
              }
            ],
            "src": "241:118:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "463:124:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "473:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "485:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "481:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "473:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "553:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "566:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "577:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "562:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "562:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "509:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "509:71:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "509:71:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "435:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "447:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "458:4:2",
                "type": ""
              }
            ],
            "src": "365:222:2"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "91:283:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "91:283:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;277:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;169:98;;;:::i;:::-;;277:95;323:7;349:4;:16;354:10;349:16;;;;;;;;;;;;;;;;;;;;;;;;;342:23;;277:95;:::o;169:98::-;248:10;235:24;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;208:4;:16;213:10;208:16;;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;169:98::o;-1:-1:-1:-;;;;;;;;:::o;7:126:2:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.5.0 <0.9.0;\n\nimport \"./TodoList.sol\";\n\ncontract TodoFactory {\n    mapping(address => address) private list;\n    \n    function createTodo() public {\n        list[msg.sender] = address(new TodoList(msg.sender));\n    }\n    \n    function getTodoByOwner() public view returns(address) {\n        return list[msg.sender];\n    }\n}",
  "sourcePath": "/home/kirill/workspace/todo_project/contracts/TodoFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/TodoFactory.sol",
    "exportedSymbols": {
      "TodoFactory": [
        37
      ],
      "TodoList": [
        211
      ]
    },
    "id": 38,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:0"
      },
      {
        "absolutePath": "project:/contracts/TodoList.sol",
        "file": "./TodoList.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 38,
        "sourceUnit": 212,
        "src": "65:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TodoFactory",
        "contractDependencies": [
          211
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 37,
        "linearizedBaseContracts": [
          37
        ],
        "name": "TodoFactory",
        "nameLocation": "100:11:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "list",
            "nameLocation": "154:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 37,
            "src": "118:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 5,
              "keyType": {
                "id": 3,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "126:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "118:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 4,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "137:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "198:69:0",
              "statements": [
                {
                  "expression": {
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9,
                        "name": "list",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "208:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 12,
                      "indexExpression": {
                        "expression": {
                          "id": 10,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "213:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "213:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "208:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 18,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "248:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "248:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 17,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "235:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_TodoList_$211_$",
                              "typeString": "function (address) returns (contract TodoList)"
                            },
                            "typeName": {
                              "id": 16,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 15,
                                "name": "TodoList",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 211,
                                "src": "239:8:0"
                              },
                              "referencedDeclaration": 211,
                              "src": "239:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TodoList_$211",
                                "typeString": "contract TodoList"
                              }
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "235:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TodoList_$211",
                            "typeString": "contract TodoList"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TodoList_$211",
                            "typeString": "contract TodoList"
                          }
                        ],
                        "id": 14,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "227:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "227:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 21,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "227:33:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "208:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "208:52:0"
                }
              ]
            },
            "functionSelector": "75360c96",
            "id": 25,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createTodo",
            "nameLocation": "178:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "188:2:0"
            },
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "198:0:0"
            },
            "scope": 37,
            "src": "169:98:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 35,
              "nodeType": "Block",
              "src": "332:40:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 30,
                      "name": "list",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "349:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 33,
                    "indexExpression": {
                      "expression": {
                        "id": 31,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "354:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "354:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "349:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 29,
                  "id": 34,
                  "nodeType": "Return",
                  "src": "342:23:0"
                }
              ]
            },
            "functionSelector": "2da38882",
            "id": 36,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTodoByOwner",
            "nameLocation": "286:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "300:2:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "323:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "323:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "322:9:0"
            },
            "scope": 37,
            "src": "277:95:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 38,
        "src": "91:283:0",
        "usedErrors": []
      }
    ],
    "src": "32:342:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/TodoFactory.sol",
    "exportedSymbols": {
      "TodoFactory": [
        37
      ],
      "TodoList": [
        211
      ]
    },
    "id": 38,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:0"
      },
      {
        "absolutePath": "project:/contracts/TodoList.sol",
        "file": "./TodoList.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 38,
        "sourceUnit": 212,
        "src": "65:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TodoFactory",
        "contractDependencies": [
          211
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 37,
        "linearizedBaseContracts": [
          37
        ],
        "name": "TodoFactory",
        "nameLocation": "100:11:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "list",
            "nameLocation": "154:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 37,
            "src": "118:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 5,
              "keyType": {
                "id": 3,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "126:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "118:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 4,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "137:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "198:69:0",
              "statements": [
                {
                  "expression": {
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9,
                        "name": "list",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "208:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 12,
                      "indexExpression": {
                        "expression": {
                          "id": 10,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "213:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "213:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "208:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 18,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "248:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "248:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 17,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "235:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_TodoList_$211_$",
                              "typeString": "function (address) returns (contract TodoList)"
                            },
                            "typeName": {
                              "id": 16,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 15,
                                "name": "TodoList",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 211,
                                "src": "239:8:0"
                              },
                              "referencedDeclaration": 211,
                              "src": "239:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TodoList_$211",
                                "typeString": "contract TodoList"
                              }
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "235:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TodoList_$211",
                            "typeString": "contract TodoList"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TodoList_$211",
                            "typeString": "contract TodoList"
                          }
                        ],
                        "id": 14,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "227:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "227:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 21,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "227:33:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "208:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "208:52:0"
                }
              ]
            },
            "functionSelector": "75360c96",
            "id": 25,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createTodo",
            "nameLocation": "178:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "188:2:0"
            },
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "198:0:0"
            },
            "scope": 37,
            "src": "169:98:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 35,
              "nodeType": "Block",
              "src": "332:40:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 30,
                      "name": "list",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "349:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 33,
                    "indexExpression": {
                      "expression": {
                        "id": 31,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "354:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "354:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "349:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 29,
                  "id": 34,
                  "nodeType": "Return",
                  "src": "342:23:0"
                }
              ]
            },
            "functionSelector": "2da38882",
            "id": 36,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTodoByOwner",
            "nameLocation": "286:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "300:2:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "323:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "323:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "322:9:0"
            },
            "scope": 37,
            "src": "277:95:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 38,
        "src": "91:283:0",
        "usedErrors": []
      }
    ],
    "src": "32:342:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x08d3cfede39f946AF74eB58268EEC02E8B2c12D5",
      "transactionHash": "0x6ee02049c9b4a5f68c55af12fb2fa7acab8448df18b65711f4c0b49d7dc671dd"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-26T13:20:39.622Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}