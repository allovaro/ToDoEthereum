{
  "contractName": "TodoFactory",
  "abi": [
    {
      "inputs": [],
      "name": "createTodo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTodoByOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"createTodo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTodoByOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TodoFactory.sol\":\"TodoFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/TodoFactory.sol\":{\"keccak256\":\"0x8ac6d38ead23741ac2275f3291975275f83b02445f13ae22e1106b5c21eb8f0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d43da44f462a2c5dca48239a50f782984c91a252c15d85c744cc48fe1755db24\",\"dweb:/ipfs/Qmf3zJPxVd3QMpSD4Ta7WTgERruXE2CQkSKau85EF2MhNX\"]},\"project:/contracts/TodoList.sol\":{\"keccak256\":\"0xb2591a03642cd9009f7c9dfb38e8c65d09be156a13bb6e01f1a5cdb54351098d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b8633ec8c8febd91678ec71a25ce790e5c4f4632a17cecc338d6529d14272dc\",\"dweb:/ipfs/QmXQ9FuTx1VhdnqBdpEiVNTKG3rHriV4PnZU5zHSngX8gG\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611463806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632da388821461003b57806375360c9614610059575b600080fd5b610043610063565b60405161005091906101c9565b60405180910390f35b6100616100c9565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b336040516100d69061017b565b6100e091906101c9565b604051809103906000f0801580156100fc573d6000803e3d6000fd5b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b611249806101e583390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101b382610188565b9050919050565b6101c3816101a8565b82525050565b60006020820190506101de60008301846101ba565b9291505056fe60806040523480156200001157600080fd5b5060405162001249380380620012498339818101604052810190620000379190620000e8565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b620000c281620000a3565b8114620000ce57600080fd5b50565b600081519050620000e281620000b7565b92915050565b6000602082840312156200010157620001006200007e565b5b60006200011184828501620000d1565b91505092915050565b61111f806200012a6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063111002aa146100675780631d65e77e14610083578063560f3192146100b55780638da5cb5b146100d15780638db4cd73146100ef578063d83e45c91461010d575b600080fd5b610081600480360381019061007c9190610ac5565b610129565b005b61009d60048036038101906100989190610b44565b610281565b6040516100ac93929190610c23565b60405180910390f35b6100cf60048036038101906100ca9190610b44565b610476565b005b6100d9610640565b6040516100e69190610ca2565b60405180910390f35b6100f7610664565b6040516101049190610cd6565b60405180910390f35b61012760048036038101906101229190610b44565b61067c565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ae90610d63565b60405180910390fd5b600160405180606001604052804281526020018381526020016000151581525090806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010190805190602001906102269291906107fb565b5060408201518160020160006101000a81548160ff02191690831515021790555050507f366fb270101ef4aa68643984ae611bdef88429241b5dab77ed0df0c28cfaec0260405161027690610dcf565b60405180910390a150565b6000606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030d90610d63565b60405180910390fd5b83600180549050811061035e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035590610e3b565b60405180910390fd5b6001858154811061037257610371610e5b565b5b9060005260206000209060030201600001546001868154811061039857610397610e5b565b5b9060005260206000209060030201600101600187815481106103bd576103bc610e5b565b5b906000526020600020906003020160020160009054906101000a900460ff168180546103e890610eb9565b80601f016020809104026020016040519081016040528092919081815260200182805461041490610eb9565b80156104615780601f1061043657610100808354040283529160200191610461565b820191906000526020600020905b81548152906001019060200180831161044457829003601f168201915b50505050509150935093509350509193909250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610504576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fb90610d63565b60405180910390fd5b60018080805490506105169190610f1a565b8154811061052757610526610e5b565b5b90600052602060002090600302016001828154811061054957610548610e5b565b5b906000526020600020906003020160008201548160000155600182018160010190805461057590610eb9565b610580929190610881565b506002820160009054906101000a900460ff168160020160006101000a81548160ff02191690831515021790555090505060018054806105c3576105c2610f4e565b5b60019003818190600052602060002090600302016000808201600090556001820160006105f0919061090e565b6002820160006101000a81549060ff0219169055505090557f366fb270101ef4aa68643984ae611bdef88429241b5dab77ed0df0c28cfaec0260405161063590610fc9565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600180805490506106779190610fe9565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461070a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070190610d63565b60405180910390fd5b806001805490508110610752576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074990610e3b565b60405180910390fd5b6001828154811061076657610765610e5b565b5b906000526020600020906003020160020160009054906101000a900460ff16156001838154811061079a57610799610e5b565b5b906000526020600020906003020160020160006101000a81548160ff0219169083151502179055507f366fb270101ef4aa68643984ae611bdef88429241b5dab77ed0df0c28cfaec026040516107ef906110c9565b60405180910390a15050565b82805461080790610eb9565b90600052602060002090601f0160209004810192826108295760008555610870565b82601f1061084257805160ff1916838001178555610870565b82800160010185558215610870579182015b8281111561086f578251825591602001919060010190610854565b5b50905061087d919061094e565b5090565b82805461088d90610eb9565b90600052602060002090601f0160209004810192826108af57600085556108fd565b82601f106108c057805485556108fd565b828001600101855582156108fd57600052602060002091601f016020900482015b828111156108fc5782548255916001019190600101906108e1565b5b50905061090a919061094e565b5090565b50805461091a90610eb9565b6000825580601f1061092c575061094b565b601f01602090049060005260206000209081019061094a919061094e565b5b50565b5b8082111561096757600081600090555060010161094f565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6109d282610989565b810181811067ffffffffffffffff821117156109f1576109f061099a565b5b80604052505050565b6000610a0461096b565b9050610a1082826109c9565b919050565b600067ffffffffffffffff821115610a3057610a2f61099a565b5b610a3982610989565b9050602081019050919050565b82818337600083830152505050565b6000610a68610a6384610a15565b6109fa565b905082815260208101848484011115610a8457610a83610984565b5b610a8f848285610a46565b509392505050565b600082601f830112610aac57610aab61097f565b5b8135610abc848260208601610a55565b91505092915050565b600060208284031215610adb57610ada610975565b5b600082013567ffffffffffffffff811115610af957610af861097a565b5b610b0584828501610a97565b91505092915050565b6000819050919050565b610b2181610b0e565b8114610b2c57600080fd5b50565b600081359050610b3e81610b18565b92915050565b600060208284031215610b5a57610b59610975565b5b6000610b6884828501610b2f565b91505092915050565b610b7a81610b0e565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bba578082015181840152602081019050610b9f565b83811115610bc9576000848401525b50505050565b6000610bda82610b80565b610be48185610b8b565b9350610bf4818560208601610b9c565b610bfd81610989565b840191505092915050565b60008115159050919050565b610c1d81610c08565b82525050565b6000606082019050610c386000830186610b71565b8181036020830152610c4a8185610bcf565b9050610c596040830184610c14565b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c8c82610c61565b9050919050565b610c9c81610c81565b82525050565b6000602082019050610cb76000830184610c93565b92915050565b6000819050919050565b610cd081610cbd565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000610d4d602183610b8b565b9150610d5882610cf1565b604082019050919050565b60006020820190508181036000830152610d7c81610d40565b9050919050565b7f6372656174656400000000000000000000000000000000000000000000000000600082015250565b6000610db9600783610b8b565b9150610dc482610d83565b602082019050919050565b60006020820190508181036000830152610de881610dac565b9050919050565b7f5461736b20646f65736e27742065786973740000000000000000000000000000600082015250565b6000610e25601283610b8b565b9150610e3082610def565b602082019050919050565b60006020820190508181036000830152610e5481610e18565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ed157607f821691505b60208210811415610ee557610ee4610e8a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f2582610b0e565b9150610f3083610b0e565b925082821015610f4357610f42610eeb565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f64656c6574656400000000000000000000000000000000000000000000000000600082015250565b6000610fb3600783610b8b565b9150610fbe82610f7d565b602082019050919050565b60006020820190508181036000830152610fe281610fa6565b9050919050565b6000610ff482610cbd565b9150610fff83610cbd565b9250827f80000000000000000000000000000000000000000000000000000000000000000182126000841215161561103a57611039610eeb565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01821360008412161561107257611071610eeb565b5b828203905092915050565b7f646f6e6500000000000000000000000000000000000000000000000000000000600082015250565b60006110b3600483610b8b565b91506110be8261107d565b602082019050919050565b600060208201905081810360008301526110e2816110a6565b905091905056fea2646970667358221220b85245059945b732c252ca5f9b3a87c6f591110893a1afc99e577406976bcd4364736f6c63430008090033a264697066735822122071d1313a58ab8d91eabe581702c93f3dc37f45e32dc89e4abeb54f1060af8b8264736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80632da388821461003b57806375360c9614610059575b600080fd5b610043610063565b60405161005091906101c9565b60405180910390f35b6100616100c9565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b336040516100d69061017b565b6100e091906101c9565b604051809103906000f0801580156100fc573d6000803e3d6000fd5b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b611249806101e583390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101b382610188565b9050919050565b6101c3816101a8565b82525050565b60006020820190506101de60008301846101ba565b9291505056fe60806040523480156200001157600080fd5b5060405162001249380380620012498339818101604052810190620000379190620000e8565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b620000c281620000a3565b8114620000ce57600080fd5b50565b600081519050620000e281620000b7565b92915050565b6000602082840312156200010157620001006200007e565b5b60006200011184828501620000d1565b91505092915050565b61111f806200012a6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063111002aa146100675780631d65e77e14610083578063560f3192146100b55780638da5cb5b146100d15780638db4cd73146100ef578063d83e45c91461010d575b600080fd5b610081600480360381019061007c9190610ac5565b610129565b005b61009d60048036038101906100989190610b44565b610281565b6040516100ac93929190610c23565b60405180910390f35b6100cf60048036038101906100ca9190610b44565b610476565b005b6100d9610640565b6040516100e69190610ca2565b60405180910390f35b6100f7610664565b6040516101049190610cd6565b60405180910390f35b61012760048036038101906101229190610b44565b61067c565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ae90610d63565b60405180910390fd5b600160405180606001604052804281526020018381526020016000151581525090806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010190805190602001906102269291906107fb565b5060408201518160020160006101000a81548160ff02191690831515021790555050507f366fb270101ef4aa68643984ae611bdef88429241b5dab77ed0df0c28cfaec0260405161027690610dcf565b60405180910390a150565b6000606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030d90610d63565b60405180910390fd5b83600180549050811061035e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035590610e3b565b60405180910390fd5b6001858154811061037257610371610e5b565b5b9060005260206000209060030201600001546001868154811061039857610397610e5b565b5b9060005260206000209060030201600101600187815481106103bd576103bc610e5b565b5b906000526020600020906003020160020160009054906101000a900460ff168180546103e890610eb9565b80601f016020809104026020016040519081016040528092919081815260200182805461041490610eb9565b80156104615780601f1061043657610100808354040283529160200191610461565b820191906000526020600020905b81548152906001019060200180831161044457829003601f168201915b50505050509150935093509350509193909250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610504576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fb90610d63565b60405180910390fd5b60018080805490506105169190610f1a565b8154811061052757610526610e5b565b5b90600052602060002090600302016001828154811061054957610548610e5b565b5b906000526020600020906003020160008201548160000155600182018160010190805461057590610eb9565b610580929190610881565b506002820160009054906101000a900460ff168160020160006101000a81548160ff02191690831515021790555090505060018054806105c3576105c2610f4e565b5b60019003818190600052602060002090600302016000808201600090556001820160006105f0919061090e565b6002820160006101000a81549060ff0219169055505090557f366fb270101ef4aa68643984ae611bdef88429241b5dab77ed0df0c28cfaec0260405161063590610fc9565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600180805490506106779190610fe9565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461070a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070190610d63565b60405180910390fd5b806001805490508110610752576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074990610e3b565b60405180910390fd5b6001828154811061076657610765610e5b565b5b906000526020600020906003020160020160009054906101000a900460ff16156001838154811061079a57610799610e5b565b5b906000526020600020906003020160020160006101000a81548160ff0219169083151502179055507f366fb270101ef4aa68643984ae611bdef88429241b5dab77ed0df0c28cfaec026040516107ef906110c9565b60405180910390a15050565b82805461080790610eb9565b90600052602060002090601f0160209004810192826108295760008555610870565b82601f1061084257805160ff1916838001178555610870565b82800160010185558215610870579182015b8281111561086f578251825591602001919060010190610854565b5b50905061087d919061094e565b5090565b82805461088d90610eb9565b90600052602060002090601f0160209004810192826108af57600085556108fd565b82601f106108c057805485556108fd565b828001600101855582156108fd57600052602060002091601f016020900482015b828111156108fc5782548255916001019190600101906108e1565b5b50905061090a919061094e565b5090565b50805461091a90610eb9565b6000825580601f1061092c575061094b565b601f01602090049060005260206000209081019061094a919061094e565b5b50565b5b8082111561096757600081600090555060010161094f565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6109d282610989565b810181811067ffffffffffffffff821117156109f1576109f061099a565b5b80604052505050565b6000610a0461096b565b9050610a1082826109c9565b919050565b600067ffffffffffffffff821115610a3057610a2f61099a565b5b610a3982610989565b9050602081019050919050565b82818337600083830152505050565b6000610a68610a6384610a15565b6109fa565b905082815260208101848484011115610a8457610a83610984565b5b610a8f848285610a46565b509392505050565b600082601f830112610aac57610aab61097f565b5b8135610abc848260208601610a55565b91505092915050565b600060208284031215610adb57610ada610975565b5b600082013567ffffffffffffffff811115610af957610af861097a565b5b610b0584828501610a97565b91505092915050565b6000819050919050565b610b2181610b0e565b8114610b2c57600080fd5b50565b600081359050610b3e81610b18565b92915050565b600060208284031215610b5a57610b59610975565b5b6000610b6884828501610b2f565b91505092915050565b610b7a81610b0e565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bba578082015181840152602081019050610b9f565b83811115610bc9576000848401525b50505050565b6000610bda82610b80565b610be48185610b8b565b9350610bf4818560208601610b9c565b610bfd81610989565b840191505092915050565b60008115159050919050565b610c1d81610c08565b82525050565b6000606082019050610c386000830186610b71565b8181036020830152610c4a8185610bcf565b9050610c596040830184610c14565b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c8c82610c61565b9050919050565b610c9c81610c81565b82525050565b6000602082019050610cb76000830184610c93565b92915050565b6000819050919050565b610cd081610cbd565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000610d4d602183610b8b565b9150610d5882610cf1565b604082019050919050565b60006020820190508181036000830152610d7c81610d40565b9050919050565b7f6372656174656400000000000000000000000000000000000000000000000000600082015250565b6000610db9600783610b8b565b9150610dc482610d83565b602082019050919050565b60006020820190508181036000830152610de881610dac565b9050919050565b7f5461736b20646f65736e27742065786973740000000000000000000000000000600082015250565b6000610e25601283610b8b565b9150610e3082610def565b602082019050919050565b60006020820190508181036000830152610e5481610e18565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ed157607f821691505b60208210811415610ee557610ee4610e8a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f2582610b0e565b9150610f3083610b0e565b925082821015610f4357610f42610eeb565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f64656c6574656400000000000000000000000000000000000000000000000000600082015250565b6000610fb3600783610b8b565b9150610fbe82610f7d565b602082019050919050565b60006020820190508181036000830152610fe281610fa6565b9050919050565b6000610ff482610cbd565b9150610fff83610cbd565b9250827f80000000000000000000000000000000000000000000000000000000000000000182126000841215161561103a57611039610eeb565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01821360008412161561107257611071610eeb565b5b828203905092915050565b7f646f6e6500000000000000000000000000000000000000000000000000000000600082015250565b60006110b3600483610b8b565b91506110be8261107d565b602082019050919050565b600060208201905081810360008301526110e2816110a6565b905091905056fea2646970667358221220b85245059945b732c252ca5f9b3a87c6f591110893a1afc99e577406976bcd4364736f6c63430008090033a264697066735822122071d1313a58ab8d91eabe581702c93f3dc37f45e32dc89e4abeb54f1060af8b8264736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:590:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:2",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:2",
                "type": ""
              }
            ],
            "src": "7:126:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "184:51:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "194:35:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "223:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "205:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "205:24:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "194:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "166:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "176:7:2",
                "type": ""
              }
            ],
            "src": "139:96:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "323:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "346:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "328:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "316:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "316:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "316:37:2"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "294:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "301:3:2",
                "type": ""
              }
            ],
            "src": "241:118:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "463:124:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "473:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "485:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "481:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "473:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "553:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "566:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "577:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "562:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "562:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "509:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "509:71:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "509:71:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "435:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "447:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "458:4:2",
                "type": ""
              }
            ],
            "src": "365:222:2"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "91:283:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "91:283:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;277:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;169:98;;;:::i;:::-;;277:95;323:7;349:4;:16;354:10;349:16;;;;;;;;;;;;;;;;;;;;;;;;;342:23;;277:95;:::o;169:98::-;248:10;235:24;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;208:4;:16;213:10;208:16;;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;169:98::o;-1:-1:-1:-;;;;;;;;:::o;7:126:2:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.5.0 <0.9.0;\n\nimport \"./TodoList.sol\";\n\ncontract TodoFactory {\n    mapping(address => address) private list;\n    \n    function createTodo() public {\n        list[msg.sender] = address(new TodoList(msg.sender));\n    }\n    \n    function getTodoByOwner() public view returns(address) {\n        return list[msg.sender];\n    }\n}",
  "sourcePath": "/home/kirill/workspace/todo_project/contracts/TodoFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/TodoFactory.sol",
    "exportedSymbols": {
      "TodoFactory": [
        37
      ],
      "TodoList": [
        215
      ]
    },
    "id": 38,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:0"
      },
      {
        "absolutePath": "project:/contracts/TodoList.sol",
        "file": "./TodoList.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 38,
        "sourceUnit": 216,
        "src": "65:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TodoFactory",
        "contractDependencies": [
          215
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 37,
        "linearizedBaseContracts": [
          37
        ],
        "name": "TodoFactory",
        "nameLocation": "100:11:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "list",
            "nameLocation": "154:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 37,
            "src": "118:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 5,
              "keyType": {
                "id": 3,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "126:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "118:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 4,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "137:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "198:69:0",
              "statements": [
                {
                  "expression": {
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9,
                        "name": "list",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "208:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 12,
                      "indexExpression": {
                        "expression": {
                          "id": 10,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "213:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "213:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "208:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 18,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "248:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "248:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 17,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "235:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_TodoList_$215_$",
                              "typeString": "function (address) returns (contract TodoList)"
                            },
                            "typeName": {
                              "id": 16,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 15,
                                "name": "TodoList",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 215,
                                "src": "239:8:0"
                              },
                              "referencedDeclaration": 215,
                              "src": "239:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TodoList_$215",
                                "typeString": "contract TodoList"
                              }
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "235:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TodoList_$215",
                            "typeString": "contract TodoList"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TodoList_$215",
                            "typeString": "contract TodoList"
                          }
                        ],
                        "id": 14,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "227:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "227:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 21,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "227:33:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "208:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "208:52:0"
                }
              ]
            },
            "functionSelector": "75360c96",
            "id": 25,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createTodo",
            "nameLocation": "178:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "188:2:0"
            },
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "198:0:0"
            },
            "scope": 37,
            "src": "169:98:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 35,
              "nodeType": "Block",
              "src": "332:40:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 30,
                      "name": "list",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "349:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 33,
                    "indexExpression": {
                      "expression": {
                        "id": 31,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "354:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "354:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "349:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 29,
                  "id": 34,
                  "nodeType": "Return",
                  "src": "342:23:0"
                }
              ]
            },
            "functionSelector": "2da38882",
            "id": 36,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTodoByOwner",
            "nameLocation": "286:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "300:2:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "323:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "323:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "322:9:0"
            },
            "scope": 37,
            "src": "277:95:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 38,
        "src": "91:283:0",
        "usedErrors": []
      }
    ],
    "src": "32:342:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/TodoFactory.sol",
    "exportedSymbols": {
      "TodoFactory": [
        37
      ],
      "TodoList": [
        215
      ]
    },
    "id": 38,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:0"
      },
      {
        "absolutePath": "project:/contracts/TodoList.sol",
        "file": "./TodoList.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 38,
        "sourceUnit": 216,
        "src": "65:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TodoFactory",
        "contractDependencies": [
          215
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 37,
        "linearizedBaseContracts": [
          37
        ],
        "name": "TodoFactory",
        "nameLocation": "100:11:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "list",
            "nameLocation": "154:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 37,
            "src": "118:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 5,
              "keyType": {
                "id": 3,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "126:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "118:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 4,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "137:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "198:69:0",
              "statements": [
                {
                  "expression": {
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9,
                        "name": "list",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "208:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 12,
                      "indexExpression": {
                        "expression": {
                          "id": 10,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "213:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "213:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "208:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 18,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "248:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "248:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 17,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "235:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_TodoList_$215_$",
                              "typeString": "function (address) returns (contract TodoList)"
                            },
                            "typeName": {
                              "id": 16,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 15,
                                "name": "TodoList",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 215,
                                "src": "239:8:0"
                              },
                              "referencedDeclaration": 215,
                              "src": "239:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TodoList_$215",
                                "typeString": "contract TodoList"
                              }
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "235:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TodoList_$215",
                            "typeString": "contract TodoList"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TodoList_$215",
                            "typeString": "contract TodoList"
                          }
                        ],
                        "id": 14,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "227:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "227:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 21,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "227:33:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "208:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "208:52:0"
                }
              ]
            },
            "functionSelector": "75360c96",
            "id": 25,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createTodo",
            "nameLocation": "178:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "188:2:0"
            },
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "198:0:0"
            },
            "scope": 37,
            "src": "169:98:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 35,
              "nodeType": "Block",
              "src": "332:40:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 30,
                      "name": "list",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "349:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 33,
                    "indexExpression": {
                      "expression": {
                        "id": 31,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "354:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "354:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "349:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 29,
                  "id": 34,
                  "nodeType": "Return",
                  "src": "342:23:0"
                }
              ]
            },
            "functionSelector": "2da38882",
            "id": 36,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTodoByOwner",
            "nameLocation": "286:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "300:2:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "323:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "323:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "322:9:0"
            },
            "scope": 37,
            "src": "277:95:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 38,
        "src": "91:283:0",
        "usedErrors": []
      }
    ],
    "src": "32:342:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "1337": {
      "events": {},
      "links": {},
      "address": "0xeE2ccDE557bf045cE092a5f885b6cAE12a19B381",
      "transactionHash": "0xda956427fc7c2b91ab6197bf2bb4fce603db5bef3e640cbceed2fc1b3912d6b4"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-28T11:30:55.544Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}